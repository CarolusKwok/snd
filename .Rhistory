}
}
sys_msg_abort_mtxWrongClass(x = "hi")
#' @keywords internal
#' @rdname sys_msg_abort_mtx
sys_msg_abort_mtxWrongClass = function(x, name){
if(!hasArg(name)){
snd:::sys_msg_abort(message = c("x" = "Wrong class in {.arg {arg}}",
"!" = "You supplied {cls {class(x)}}",
"i" = "Please use {.cls data.frame}, {.cls tibble} in {.arg {arg}}"),
arg = rlang::caller_arg(arg = x))
} else {
snd:::sys_msg_abort(message = c("x" = "Wrong class in {.arg {arg}} ({.mtx {name}})",
"!" = "You supplied {.cls {class(x)}}",
"i" = "Please use {.cls data.frame}, {.cls tibble} in {.mtx {name}}"),
arg = rlang::caller_arg(arg = x),
name = name)
}
}
sys_msg_abort_mtxWrongClass(x = "hi")
#' @keywords internal
#' @rdname sys_msg_abort_mtx
sys_msg_abort_mtxWrongClass = function(x, name){
if(!hasArg(name)){
snd:::sys_msg_abort(message = c("x" = "Wrong class in {.arg {arg}}",
"!" = "You supplied {cls {class(x)}}",
"i" = "Please use {.cls data.frame}, {.cls tibble} in {.arg {arg}}"),
arg = rlang::caller_arg(arg = x))
} else {
snd:::sys_msg_abort(message = c("x" = "Wrong class in {.arg {arg}} ({.mtx {name}})",
"!" = "You supplied {.cls {class(x)}}",
"i" = "Please use {.cls data.frame}, {.cls tibble} in {.mtx {name}}"),
arg = rlang::caller_arg(arg = x),
name = name)
}
}
sys_msg_abort_mtxWrongClass(x = "hi")
#' @keywords internal
#' @rdname sys_msg_abort_mtx
sys_msg_abort_mtxWrongClass = function(x, name){
if(!hasArg(name)){
snd:::sys_msg_abort(message = c("x" = "Wrong class in {.arg {arg}}",
"!" = "You supplied {cls {class(x)}}",
"i" = "Please use {.cls data.frame}, {.cls tibble} in {.arg {arg}}"),
arg = rlang::caller_arg(arg = x))
} else {
snd:::sys_msg_abort(message = c("x" = "Wrong class in {.arg {arg}} ({.mtx {name}})",
"!" = "You supplied {.cls {class(x)}}",
"i" = "Please use {.cls data.frame}, {.cls tibble} in {.mtx {name}}"),
arg = rlang::caller_arg(arg = x),
name = name)
}
}
#' @keywords internal
#' @rdname sys_msg_abort_mtx
sys_msg_abort_mtxWrongClass = function(x, name){
if(!hasArg(name)){
snd:::sys_msg_abort(message = c("x" = "Wrong class in {.arg {arg}}",
"!" = "You supplied {.cls {class(x)}}",
"i" = "Please use {.cls data.frame}, {.cls tibble} in {.arg {arg}}"),
arg = rlang::caller_arg(arg = x))
} else {
snd:::sys_msg_abort(message = c("x" = "Wrong class in {.arg {arg}} ({.mtx {name}})",
"!" = "You supplied {.cls {class(x)}}",
"i" = "Please use {.cls data.frame}, {.cls tibble} in {.mtx {name}}"),
arg = rlang::caller_arg(arg = x),
name = name)
}
}
sys_msg_abort_mtxWrongClass(x = "hi")
#' @keywords internal
#' @rdname sys_msg_abort_mtx
sys_msg_abort_mtxWrongClass = function(x, name){
print(class(x))
if(!hasArg(name)){
snd:::sys_msg_abort(message = c("x" = "Wrong class in {.arg {arg}}",
"!" = "You supplied {.cls {class(x)}}",
"i" = "Please use {.cls data.frame}, {.cls tibble} in {.arg {arg}}"),
arg = rlang::caller_arg(arg = x))
} else {
snd:::sys_msg_abort(message = c("x" = "Wrong class in {.arg {arg}} ({.mtx {name}})",
"!" = "You supplied {.cls {class(x)}}",
"i" = "Please use {.cls data.frame}, {.cls tibble} in {.mtx {name}}"),
arg = rlang::caller_arg(arg = x),
name = name)
}
}
sys_msg_abort_mtxWrongClass(x = "hi")
#' @keywords internal
#' @rdname sys_msg_abort_mtx
sys_msg_abort_mtxWrongClass = function(x, name){
print(class(x))
if(!hasArg(name)){
snd:::sys_msg_abort(message = c("x" = "Wrong class in {.arg {arg}}",
"i" = "Please use {.cls data.frame}, {.cls tibble} in {.arg {arg}}"),
arg = rlang::caller_arg(arg = x))
} else {
snd:::sys_msg_abort(message = c("x" = "Wrong class in {.arg {arg}} ({.mtx {name}})",
"i" = "Please use {.cls data.frame}, {.cls tibble} in {.mtx {name}}"),
arg = rlang::caller_arg(arg = x),
name = name)
}
}
sys_msg_abort_mtxWrongClass(x = "hi")
#' @keywords internal
#' @rdname sys_msg_abort_mtx
sys_msg_abort_mtxWrongClass = function(x, name){
class = class(x)
if(!hasArg(name)){
snd:::sys_msg_abort(message = c("x" = "Wrong class in {.arg {arg}}",
"!" = "You supplied {.cls {class}}",
"i" = "Please use {.cls data.frame}, {.cls tibble} in {.arg {arg}}"),
arg = rlang::caller_arg(arg = x),
class = class)
} else {
snd:::sys_msg_abort(message = c("x" = "Wrong class in {.arg {arg}} ({.mtx {name}})",
"!" = "You supplied {.cls {class}}",
"i" = "Please use {.cls data.frame}, {.cls tibble} in {.mtx {name}}"),
arg = rlang::caller_arg(arg = x),
name = name, class = class)
}
}
sys_msg_abort_mtxWrongClass(x = "hi")
sys_msg_abort_mtxWrongClass(x = "hi", name = "yo")
library(snd)
library(snd)
snd:::sys_msg_abort_mtxMissingKey(x = mxItem,
keys_missing = missing_keys,
name = mxItemName)
snd:::sys_msg_abort_mtxMissingKey(x = mxItem,
keys_missing = missing_keys,
name = "mxItemName")
snd:::sys_msg_abort_mtxMissingKey(x = mxItem,
keys_missing = "@datatype",
name = "mxItemName")
library(snd)
must_have_keys
library(snd)
usethis::use_r("system-msg-abort_file")
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
snd:::sys_msg_abort_mtxColWrongClass()
snd:::sys_msg_abort_mtxColWrongClass(x = df)
snd:::sys_msg_abort_mtxColWrongClass(x = df, expected = "jfafl")
snd:::sys_msg_abort_mtxColWrongClass(x = df, columns = "fjajfa", expected = "jfafl")
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
snd:::sys_abort_mtxColGrpItemsNotUnique(x = "hi", columns = "a", group_by = "b", failed_groups = "c")
library(snd)
library(snd)
library(snd)
library(snd)
?snd:::sys_abort
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
usethis::use_r("sys_abort_mtxWrongClass")
usethis::use_r("sys_abort_mtxMissingKey")
usethis::use_r("sys_abort_mtxColWrongClass")
usethis::use_r("sys_abort_mtxColContainNonFactor")
library(snd)
usethis::use_r("sys_abort_mtxColNotAllFilled")
usethis::use_r("sys_abort_mtxColGrpItemsNotUnique")
usethis::use_r("sys_abort_mtxColGrpItemsNotSameLength")
library(snd)
library(snd)
usethis::use_r("sys_abort_mtxColNotAllFilledEmptied")
usethis::use_r("sys_abort_mtxMissingFactor")
usethis::use_r("sys_abort_mtxMissingItem")
usethis::use_r("sys_abort_mtxColUnsupport")
library(snd)
library(snd)
usethis::use_r("sys-warning")
library(snd)
sys_warn(message = "test")
snd:::sys_warn(message = "test")
library(snd)
library(snd)
usethis::use_r("format_mtxFactor")
library(snd)
library(snd)
library(snd)
library(snd)
alias
tibble::tibble(numeric = c("number", "n"))
tibble::tibble(numeric = c("number", "n")) %>% t()
tibble::tibble(1 = c("numeric", "number", "n"))
tibble::tibble(a = c("numeric", "number", "n"))
tibble::tibble(a = c("numeric", "number", "n")) %>% t()
tibble::tibble(c("numeric", "number", "n")) %>% t()
tibble::tibble(`1` = c("numeric", "number", "n")) %>% t()
data = tibble::tibble(`1` = c("numeric", "number", "n")) %>% t()
data
colnames(data) = c("full", "alias", "abbr")
data
rownames(data) = NULL
data
rownames(data) = NA
data
data = tibble::tibble(`1` = c("numeric", "number", "n")) %>% t() %>% tibble::as_tibble()
colnames(data) = c("full", "alias", "abbr")
rownames(data) = NA
data = tibble::tibble(`1` = c("numeric", "number", "n")) %>% t() %>% tibble::as_tibble(.name_repair = "universal")
colnames(data) = c("full", "alias", "abbr")
rownames(data) = NA
data
data = tibble::tibble(`1` = c("numeric", "number", "n")) %>% t() %>% tibble::as_tibble(.name_repair = "universal")
colnames(data) = c("full", "alias", "abbr")
data
data = tibble::tibble(`1` = c("numeric", "number", "n")) %>%
t() %>%
suppressMessages(tibble::as_tibble(.name_repair = "universal"))
colnames(data) = c("full", "alias", "abbr")
data
data = tibble::tibble(`1` = c("numeric", "number", "n")) %>%
t() %>%
suppressMessages(tibble::as_tibble(.name_repair = "universal")) %>%
dplyr::rename(full, alias, abbr)
data = tibble::tibble(`1` = c("numeric", "number", "n")) %>%
t() %>%
suppressMessages(tibble::as_tibble(.name_repair = "universal"))
data
colnames(data) = c("full" = `[,1]`, "alias" = `[,2]`, "abbr" = `[,3]`)
colnames(data)
tibble::tibble(`1` = c("numeric", "number", "n"))
data = tibble::tibble(`1` = c("numeric", "number", "n"))
data = tibble::tibble(`1` = c("numeric", "number", "n")) %>%
dplyr::add_rownames()
data = tibble::tibble(`1` = c("numeric", "number", "n")) %>%
tibble::rownames_to_column()
data
data
data = tibble::tibble(type = c("full", "alias", "abbr"),
`1` = c("numeric", "number", "n")) %>%
tibble::column_to_rownames(var = type)
data
data = tibble::tibble(type = c("full", "alias", "abbr"),
`1` = c("numeric", "number", "n")) %>%
tibble::column_to_rownames(var = type)
data
data = tibble::tibble(type = c("full", "alias", "abbr"),
`1` = c("numeric", "number", "n")) %>%
tibble::column_to_rownames(var = type)
data = tibble::tibble(type = c("full", "alias", "abbr"),
`1` = c("numeric", "number", "n")) %>%
tibble::column_to_rownames(var = `type`)
data = tibble::tibble(type = c("full", "alias", "abbr"),
`1` = c("numeric", "number", "n")) %>%
tibble::column_to_rownames(var = "type")
data
data = tibble::tibble(type = c("full", "alias", "abbr"),
`1` = c("numeric", "number", "n")) %>%
tibble::column_to_rownames(var = "type") %>%
base::t()
data
#' System tools: List out all supported datatypes in SND
#'
#' @return A list of supported datatypes/ classes, in `character`
#' @keywords internal
#'
#' @examples sys_datatype_support()
sys_datatype_support = function(with_abbr = F){
data = tibble::tibble(type = c("full", "alias", "abbr"),
`1`  = c("numeric", "num", "n"),
`2`  = c("integer", "int", "i"),
`3`  = c("character", "string", "c"),
`4`  = c("logical", "boolean", "l"),
`5`  = c("POSIXct", "time", "t"),
`6`  = c("factor", "fac", "f")) %>%
tibble::column_to_rownames(var = "type") %>%
base::t()
if(!with_abbr){
return(data$full)
} else {
return(data)
}
}
library(snd)
snd:::sys_datatype_support()
library(snd)
snd:::sys_datatype_support()
library(snd)
snd:::sys_datatype_support()
library(snd)
library(snd)
usethis::use_r("system-abort_mtxKeyDatatypeUnsupported")
library(snd)
library(snd)
library(snd)
yo = function(hi){
print(rlang::is_missing(hi))
}
yo()
yo("hi")
library(snd)
library(snd)
?stringr::str_locate
tibble::tibble(a = c(1, "1_", "3213_32121"))
tibble::tibble(a = c("1", "1_", "3213_32121")) %>%
dplyr::mutate(dash_position = stringr::str_locate(`@datatype`, pattern = "_"),
real_datatype = stringr::str_sub(string = `@datatype`, start = 1L, end = dash_position))
tibble::tibble(a = c("1", "1_", "3213_32121")) %>%
dplyr::mutate(dash_position = stringr::str_locate(`@a`, pattern = "_"),
real_datatype = stringr::str_sub(string = `a`, start = 1L, end = dash_position))
dplyr::mutate(.data = tibble::tibble(a = c("1", "1_", "3213_32121")),
dash_position = stringr::str_locate(`@a`, pattern = "_"),
real_datatype = stringr::str_sub(string = `a`, start = 1L, end = dash_position))
dplyr::mutate(.data = tibble::tibble(a = c("1", "1_", "3213_32121")),
dash_position = stringr::str_locate(`a`, pattern = "_"),
real_datatype = stringr::str_sub(string = `a`, start = 1L, end = dash_position))
dplyr::mutate(.data = tibble::tibble(a = c("1", "1_", "3213_32121")),
dash_position = stringr::str_locate(`a`, pattern = "_"))
dplyr::mutate(.data = tibble::tibble(a = c("1", "1_", "3213_32121")),
dash_position = stringr::str_locate(`a`, pattern = "_")$start)
dplyr::mutate(.data = tibble::tibble(a = c("1", "1_", "3213_32121")),
dash_position = (stringr::str_locate(`a`, pattern = "_")$start))
dplyr::mutate(.data = tibble::tibble(a = c("1", "1_", "3213_32121")),
dash_position = (stringr::str_locate(`a`, pattern = "_")[,"start"]))
dplyr::mutate(.data = tibble::tibble(a = c("1", "1_", "3213_32121")),
dash_position = (stringr::str_locate(`a`, pattern = "_")[,"start"]),)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
snd:::sys_datatype_support()
snd:::sys_datatype_support()
snd:::sys_datatype_support(with_abbr = T)$full
snd:::sys_datatype_support(with_abbr = T)$alias
snd:::sys_datatype_support(with_abbr = T)$abbr
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
uesthis::use_r("system-format_tools")
usethis::use_r("system-format_tools")
library(snd)
library(snd)
usethis::use_r("system-grab-key")
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
usethis::use_r("sys_abort_mtxColGrpItemsNotSame")
library(snd)
library(snd)
library(snd)
library(snd)
usethis::use_r("system-format_fullset")
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
usethis::use_r("checkRW_itemDT")
library(snd)
snd:::sys_datatype_support()
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
usethis::use_pipe()
library(snd)
library(snd)
library(snd)
library(snd)
usethis::use_r("format_withkey")
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
usethis::use_r("format_matrix_with")
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
snd:::sys_datatype_support(with_abbr = TRUE)
library(snd)
library(snd)
usethis::use_r("format_key")
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
snd:::sys_datatype_support(with_abbr = TRUE)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
library(snd)
